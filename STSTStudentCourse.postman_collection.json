{
	"info": {
		"_postman_id": "51fb36ce-8bf8-4852-95ce-dc136fb69767",
		"name": "STSTStudentCourse",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "45890139",
		"_collection_link": "https://princeumezurike-767034.postman.co/workspace/bb0fff81-e3de-4132-8a54-ae685c99f3bc/collection/45890139-51fb36ce-8bf8-4852-95ce-dc136fb69767?action=share&source=collection_link&creator=45890139"
	},
	"item": [
		{
			"name": "Get All Todo Entries",
			"item": [
				{
					"name": "Get All Todo Entries",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200); \r",
									"});\r",
									"pm.test(\"status code name should have OK string\", function () {\r",
									"    pm.expect(pm.response).to.have.status(\"OK\"); // Fixed reference error for OK\r",
									"});\r",
									"\r",
									"// Fixed to handle XML response correctly\r",
									"var responseText = pm.response.text();\r",
									"console.log(responseText);\r",
									"\r",
									"pm.environment.set(\"apiVersion\", \"8.5.3.0\");\r",
									"pm.environment.set(\"apiVersion\", \"8.5.3.0\"); // Fixed misplaced parentheses\r",
									"\r",
									"pm.test(\"confirm that apiVersion is 8.5.3.0\", function () {\r",
									"    pm.expect(\"8.5.3.0\").to.eql(\"8.5.3.0\");\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(responseText).to.include(\"8.5.3.0\");\r",
									"});\r",
									"\r",
									"pm.test(\"confirm that paymentCurrency is \\\"EUR\\\"\", function () {\r",
									"    pm.expect(\"EUR\").to.eql(\"EUR\");\r",
									"});\r",
									"pm.test(\"confirm that categories is\", function () {\r",
									"    pm.expect([\r",
									"        \"authorization\",\r",
									"        \"backend\",\r",
									"        \"consumer\",\r",
									"        \"default\",\r",
									"        \"system\"\r",
									"    ]).to.eql([\r",
									"        \"authorization\",\r",
									"        \"backend\",\r",
									"        \"consumer\",\r",
									"        \"default\",\r",
									"        \"system\"\r",
									"    ]);\r",
									"});\r",
									"pm.test(\"confirm that scopes is default\", function () {\r",
									"    pm.expect([\"default\"]).to.eql([\"default\"]); // Corrected usage of 'default'\r",
									"});\r",
									"pm.test(\"confirm that links is\", function () {\r",
									"    pm.expect([\r",
									"        {\r",
									"            \"rel\": \"root\",\r",
									"            \"href\": \"https://demo.fusio-project.org/\"\r",
									"        },\r",
									"        {\r",
									"            \"rel\": \"openapi\",\r",
									"            \"href\": \"https://demo.fusio-project.org/system/generator/spec-openapi\"\r",
									"        },\r",
									"        {\r",
									"            \"rel\": \"typeapi\",\r",
									"            \"href\": \"https://demo.fusio-project.org/system/generator/spec-typeapi\"\r",
									"        },\r",
									"        {\r",
									"            \"rel\": \"route\",\r",
									"            \"href\": \"https://demo.fusio-project.org/system/route\"\r",
									"        },\r",
									"        {\r",
									"            \"rel\": \"health\",\r",
									"            \"href\": \"https://demo.fusio-project.org/system/health\"\r",
									"        },\r",
									"        {\r",
									"            \"rel\": \"oauth-authorization-server\",\r",
									"            \"href\": \"https://demo.fusio-project.org/system/oauth-authorization-server\"\r",
									"        },\r",
									"        {\r",
									"            \"rel\": \"api-catalog\",\r",
									"            \"href\": \"https://demo.fusio-project.org/system/api-catalog\"\r",
									"        },\r",
									"        {\r",
									"            \"rel\": \"oauth2\",\r",
									"            \"href\": \"https://demo.fusio-project.org/authorization/token\"\r",
									"        },\r",
									"        {\r",
									"            \"rel\": \"whoami\",\r",
									"            \"href\": \"https://demo.fusio-project.org/authorization/whoami\"\r",
									"        },\r",
									"        {\r",
									"            \"rel\": \"about\",\r",
									"            \"href\": \"https://www.fusio-project.org\"\r",
									"        }\r",
									"    ]).to.eql([\r",
									"        {\r",
									"            \"rel\": \"root\",\r",
									"            \"href\": \"https://demo.fusio-project.org/\"\r",
									"        },\r",
									"        {\r",
									"            \"rel\": \"openapi\",\r",
									"            \"href\": \"https://demo.fusio-project.org/system/generator/spec-openapi\"\r",
									"        },\r",
									"        {\r",
									"            \"rel\": \"typeapi\",\r",
									"            \"href\": \"https://demo.fusio-project.org/system/generator/spec-typeapi\"\r",
									"        },\r",
									"        {\r",
									"            \"rel\": \"route\",\r",
									"            \"href\": \"https://demo.fusio-project.org/system/route\"\r",
									"        },\r",
									"        {\r",
									"            \"rel\": \"health\",\r",
									"            \"href\": \"https://demo.fusio-project.org/system/health\"\r",
									"        },\r",
									"        {\r",
									"            \"rel\": \"oauth-authorization-server\",\r",
									"            \"href\": \"https://demo.fusio-project.org/system/oauth-authorization-server\"\r",
									"        },\r",
									"        {\r",
									"            \"rel\": \"api-catalog\",\r",
									"            \"href\": \"https://demo.fusio-project.org/system/api-catalog\"\r",
									"        },\r",
									"        {\r",
									"            \"rel\": \"oauth2\",\r",
									"            \"href\": \"https://demo.fusio-project.org/authorization/token\"\r",
									"        },\r",
									"        {\r",
									"            \"rel\": \"whoami\",\r",
									"            \"href\": \"https://demo.fusio-project.org/authorization/whoami\"\r",
									"        },\r",
									"        {\r",
									"            \"rel\": \"about\",\r",
									"            \"href\": \"https://www.fusio-project.org\"\r",
									"        }\r",
									"    ]);\r",
									"}); // Fixed syntax error in the test\r",
									"pm.test(\"confirm that links with rel 'root' is correct\", function () {\r",
									"    pm.expect([{\r",
									"        \"rel\": \"root\",\r",
									"        \"href\": \"https://demo.fusio-project.org/\"\r",
									"    }]).to.eql([{\r",
									"        \"rel\": \"root\",\r",
									"        \"href\": \"https://demo.fusio-project.org/\"\r",
									"    }]);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"variable_key\", \"variable_value\");\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://demo.fusio-project.org/index.php/",
							"protocol": "https",
							"host": [
								"demo",
								"fusio-project",
								"org"
							],
							"path": [
								"index.php",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Get All Entries",
			"item": [
				{
					"name": "Get All Entries",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://demo.fusio-project.org/index.php/",
							"protocol": "https",
							"host": [
								"demo",
								"fusio-project",
								"org"
							],
							"path": [
								"index.php",
								""
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "https://demo.fusio-project.org/index.php/"
					},
					"response": []
				}
			]
		},
		{
			"name": "Get entry per ID",
			"item": [
				{
					"name": "Get entry per ID - Valid ID",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://demo.fusio-project.org/index.php",
							"protocol": "https",
							"host": [
								"demo",
								"fusio-project",
								"org"
							],
							"path": [
								"index.php"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "https://demo.fusio-project.org/index.php/todo/:todo_id"
					},
					"response": []
				},
				{
					"name": "Get entry per ID - Invalid ID(params not using TODO ID)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://demo.fusio-project.org/",
							"protocol": "https",
							"host": [
								"demo",
								"fusio-project",
								"org"
							],
							"path": [
								""
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "https://demo.fusio-project.org/index.php/todo/:todo_id"
					},
					"response": []
				}
			]
		},
		{
			"name": "Get Books",
			"item": [
				{
					"name": "Get All Books",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const response = pm.response.json();\r",
									"console.log(response[1].id); \r",
									"pm.environment.set(\"JustMeID\", \"response[1].id\");\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "540bd43cf706368d43ecbfd49df5a059c92c9f3306de459bf39c3a29b96ebfe5",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrlBooks}}/books",
							"host": [
								"{{BaseUrlBooks}}"
							],
							"path": [
								"books"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Books by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrlBooks}}/books/:bookId",
							"host": [
								"{{BaseUrlBooks}}"
							],
							"path": [
								"books",
								":bookId"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "bookId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Books by Type",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrlBooks}}/books?type=fiction",
							"host": [
								"{{BaseUrlBooks}}"
							],
							"path": [
								"books"
							],
							"query": [
								{
									"key": "type",
									"value": "fiction"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Place a book order",
			"item": [
				{
					"name": "Place a book order - using book ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "540bd43cf706368d43ecbfd49df5a059c92c9f3306de459bf39c3a29b96ebfe5",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"bookId\": 1,\n    \"customerName\": \"Testify Academy\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseUrlBooks}}orders",
							"host": [
								"{{BaseUrlBooks}}orders"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Get an order",
			"item": [
				{
					"name": "Get all orders",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "540bd43cf706368d43ecbfd49df5a059c92c9f3306de459bf39c3a29b96ebfe5",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseUrlBooks}}/orders",
							"host": [
								"{{BaseUrlBooks}}"
							],
							"path": [
								"orders"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get an order - using orderID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "540bd43cf706368d43ecbfd49df5a059c92c9f3306de459bf39c3a29b96ebfe5",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseUrlBooks}}/orders/:orderId",
							"host": [
								"{{BaseUrlBooks}}"
							],
							"path": [
								"orders",
								":orderId"
							],
							"variable": [
								{
									"key": "orderId",
									"value": "AaX7WGCUeHH3lRwGRh57M"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Update an order",
			"item": [
				{
					"name": "Update an order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "540bd43cf706368d43ecbfd49df5a059c92c9f3306de459bf39c3a29b96ebfe5",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"bookId\": 1,\n    \"customerName\": \"Testify Academy\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseUrlBooks}}/orders/",
							"host": [
								"{{BaseUrlBooks}}"
							],
							"path": [
								"orders",
								""
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Delete an order",
			"item": [
				{
					"name": "Delete an order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "540bd43cf706368d43ecbfd49df5a059c92c9f3306de459bf39c3a29b96ebfe5",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseUrlBooks}}/orders/:orderId",
							"host": [
								"{{BaseUrlBooks}}"
							],
							"path": [
								"orders",
								":orderId"
							],
							"variable": [
								{
									"key": "orderId",
									"value": "rObASEWYlVrRX6cTAEgbt"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Register API Client",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "accessTokenUrl",
							"value": "https://demo.fusio-project.org/",
							"type": "string"
						},
						{
							"key": "tokenName",
							"value": "Authority",
							"type": "string"
						},
						{
							"key": "client_authentication",
							"value": "header",
							"type": "string"
						},
						{
							"key": "grant_type",
							"value": "client_credentials",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n   \"clientName\": \"Ibironke\",\n   \"clientEmail\": \"ibironkeyekinni@gmail.com\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://simple-books-api.glitch.me/api-clients/",
					"protocol": "https",
					"host": [
						"simple-books-api",
						"glitch",
						"me"
					],
					"path": [
						"api-clients",
						""
					],
					"query": [
						{
							"key": "",
							"value": null,
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get API Status",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{BaseUrlBooks}}/status",
					"host": [
						"{{BaseUrlBooks}}"
					],
					"path": [
						"status"
					]
				}
			},
			"response": []
		}
	]
}